name: Build and deploy to Docker hub
on:
  release:
    types: [published]
jobs:
  build_apis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies geofenceapi_v1
        run: |
          python -m pip install --upgrade pip
          cd geofenceapi_v1
          pip install -r requirements_dev.txt

      - name: Run test suite geofenceapi_v1
        run: |
          cd geofenceapi_v1
          coverage run -m pytest      
          coverage xml
      - name: Login into docker hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: metav1
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: hastman/scrap_ad_v1

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: geofenceapi_v1/.
          push: true
          tags: ${{ steps.metav1.outputs.tags }}
          labels: ${{ steps.metav1.outputs.labels }}

      - name: Install dependencies geofenceapi_v2
        run: |
          cd geofenceapi_v2
          pip install -r requirements_dev.txt
      - name: Run test suite geofenceapi_v2
        run: |
          cd geofenceapi_v2
          coverage run -m pytest      
          coverage xml
      - name: Login into docker hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker       
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        id: metav2
        with:
          images: hastman/scrap_ad_v2

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc        
        with:
          context: geofenceapi_v2/.
          push: true
          tags: ${{ steps.metav2.outputs.tags }}
          labels: ${{ steps.metav2.outputs.labels }}

      - name: generate badge coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./geofenceapi_v1/coverage.xml,./geofenceapi_v2/coverage.xml # optional
          token: ${{ secrets.CODECOV_TOKEN }}
  deploy_to_aws:
    needs: [build_apis]
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: ${{ secrets.DEPLOY_SCRIPT_DOCKER_COMPOSE }}
